<?xml version="1.0" encoding="UTF-8"?>
<!-- 
****
****     Filename : marc21_auth_validate.xsl
****       Author : Kosmas Giannis <kosmasgiannis@gmail.com>
**** Generated by : marc21auth2xsl.php
****         Note : This file is autogenerated
****
-->
<xsl:stylesheet xmlns:marc="http://www.loc.gov/MARC21/slim" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="marc xs" version="1.0">
  <xsl:output indent="yes" encoding="UTF-8"/>
  <xsl:template name="validateDatafield">
    <xsl:param name="isObselete" select="false()"/>
    <xsl:param name="sCodesNR"/>
    <xsl:param name="sCodesR"/>
    <xsl:param name="i1Values"/>
    <xsl:param name="i2Values"/>
    <xsl:if test="$isObselete=true()">
      <warning type="ObsoleteTag">
        <xsl:call-template name="controlNumber"/>
        <tag>
          <xsl:value-of select="@tag"/>
        </tag>
      </warning>
    </xsl:if>
    <xsl:call-template name="checkNRSubfields">
      <xsl:with-param name="sCodesNR" select="$sCodesNR"/>
    </xsl:call-template>
    <xsl:call-template name="validateSubfields">
      <xsl:with-param name="sCodes" select="concat($sCodesR,$sCodesNR)"/>
    </xsl:call-template>
    <xsl:call-template name="validateIndicator1">
      <xsl:with-param name="iValues" select="$i1Values"/>
    </xsl:call-template>
    <xsl:call-template name="validateIndicator2">
      <xsl:with-param name="iValues" select="$i2Values"/>
    </xsl:call-template>
  </xsl:template>
  <xsl:template name="checkNRSubfields">
    <xsl:param name="sCodesNR"/>
    <xsl:if test="$sCodesNR">
      <xsl:if test="count(marc:subfield[@code=substring($sCodesNR,1,1)])&gt;1">
        <error type="NonRepeatableSubField">
          <xsl:call-template name="controlNumber"/>
          <tag>
            <xsl:value-of select="@tag"/>
          </tag>
          <code>
            <xsl:value-of select="substring($sCodesNR,1,1)"/>
          </code>
        </error>
      </xsl:if>
      <xsl:call-template name="checkNRSubfields">
        <xsl:with-param name="sCodesNR" select="substring($sCodesNR,2)"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>
  <xsl:template name="validateSubfields">
    <xsl:param name="sCodes"/>
    <xsl:for-each select="marc:subfield">
      <xsl:if test="not(contains($sCodes, @code))">
        <error type="InvalidSubfieldCode">
          <xsl:call-template name="controlNumber"/>
          <tag>
            <xsl:value-of select="../@tag"/>
          </tag>
          <code>
            <xsl:value-of select="@code"/>
          </code>
        </error>
      </xsl:if>
    </xsl:for-each>
  </xsl:template>
  <xsl:template name="validateIndicator1">
    <xsl:param name="iValues"/>
    <xsl:if test="not(contains($iValues,@ind1))">
      <error type="InvalidIndicator">
        <xsl:call-template name="controlNumber"/>
        <tag>
          <xsl:value-of select="@tag"/>
        </tag>
        <ind1>
          <xsl:value-of select="@ind1"/>
        </ind1>
      </error>
    </xsl:if>
  </xsl:template>
  <xsl:template name="validateIndicator2">
    <xsl:param name="iValues"/>
    <xsl:if test="not(contains($iValues,@ind2))">
      <error type="InvalidIndicator">
        <xsl:call-template name="controlNumber"/>
        <tag>
          <xsl:value-of select="@tag"/>
        </tag>
        <ind2>
          <xsl:value-of select="@ind2"/>
        </ind2>
      </error>
    </xsl:if>
  </xsl:template>

  <xsl:template match="/">
    <validationReport>
      <xsl:if test="marc:collection">
        <xsl:apply-templates select="marc:collection/marc:record"/>
      </xsl:if>
      <xsl:if test="marc:record">
        <xsl:apply-templates select="marc:record"/>
      </xsl:if>
    </validationReport>
  </xsl:template>

  <xsl:template match="marc:record">
    <xsl:if test="count(marc:datafield[starts-with(@tag,'1')]) &gt; 1">
      <error type="TooManyMainHeadings"/>
    </xsl:if>
    <xsl:if test="count(marc:datafield[starts-with(@tag,'1')]) = 0">
      <error type="NoMainHeading"/>
    </xsl:if>
    <xsl:if test="count(marc:controlfield[@tag=001]) != 1">
      <error type="MandatoryNonRepeatable">
        <tag>001</tag>
      </error>
    </xsl:if>
    <xsl:if test="count(marc:controlfield[@tag=003]) &gt; 1">
      <error type="NonRepeatable">
        <tag>003</tag>
      </error>
    </xsl:if>
    <xsl:if test="count(marc:controlfield[@tag=005]) &gt; 1">
      <error type="NonRepeatable">
        <tag>005</tag>
      </error>
    </xsl:if>
    <xsl:if test="count(marc:controlfield[@tag=008]) != 1">
      <error type="MandatoryNonRepeatable">
        <tag>008</tag>
      </error>
    </xsl:if>
<!-- -->

